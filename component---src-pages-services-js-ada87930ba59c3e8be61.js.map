{"version":3,"file":"component---src-pages-services-js-ada87930ba59c3e8be61.js","mappings":"oJAGMA,GAAOC,E,QAAAA,IAAO,MAAPA,EAAc,kBAIrB,CACFC,MAAO,OACPC,WANuB,EAEvBC,MAIkBC,QAAQC,UAAUC,KACpCC,QAAS,kBACTC,MAAO,QACPC,UAAW,SACXC,UAAW,WACX,gCAAiC,CAC/BH,QAAS,wBAuBf,IAnBkB,SAAC,GAAmB,IAAjBF,EAAgB,EAAhBA,UAEnB,OACE,gBAACN,EAAD,KACE,sBAAIY,MAAO,CAAEC,aAAc,IAAMP,EAAUQ,OAC3C,yBACE,wBAAMF,MAAO,CAAEG,cAAe,SAC3BT,EAAUU,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACpB,gBAAC,WAAD,CAAgBC,IAAKD,GAClBD,EACD,oC,sGCrBRG,EAAS,WAETC,EAAU,CACdC,KAASF,EAAL,QACJG,SAAaH,EAAL,YACRI,cAAkBJ,EAAL,iBACbK,cAAkBL,EAAL,kBAGTrB,GAAOC,EAAAA,EAAAA,IAAO,MAAPA,EAAc,kBAEvBG,EAFuB,EAEvBA,MAFuB,mBAKlBkB,EAAQC,MAAS,CACtBI,QAAS,OACTC,oBAAqB,cACrBC,aAAc,SACdC,iBAAkB,kBAClBC,IAAK,WACL7B,MAAO,OACPa,cAAe,OACfF,aAAc,YACd,gCAAiC,CAC/Be,oBAAqB,OACrBE,iBAAkB,OAClBD,aAAc,UAjBO,QAqBlBP,EAAQE,UAAa,CAC1BhB,QAAS,WACTwB,gBAAiB5B,EAAMC,QAAQmB,UAvBR,QA0BlBF,EAAQG,eAAkB,CAC/BvB,MAAO,OACPQ,UAAW,SACXD,MAAOL,EAAMC,QAAQ4B,QAAQ1B,KAC7B2B,SAAU,QACV1B,QAAS,aACT2B,WAAY,YAhCW,QAmClBb,EAAQI,eAAkB,CAC/BxB,MAAO,OACPM,QAAS,cArCc,KAyCrB4B,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MA6BbC,GA3BOC,EAAAA,EAAAA,gBAAe,cA2BFC,aAE1B,OACE,gBAACxC,EAAD,KACE,gBAAC,IAAD,CAAKc,MAAM,aACX,gBAAC,IAAD,CAAWR,UAAWgC,EAAahC,YACnC,uBAAKmC,UAAWnB,EAAQC,MACrBe,EAAaI,KAAKzB,KAAI,SAAC0B,EAAMxB,GAAP,OACrB,gBAAC,WAAD,CAAgBC,IAAKD,GACnB,uBAAKsB,UAAWnB,EAAQE,UACtB,uBAAKiB,UAAWnB,EAAQG,eACtB,qBAAGgB,UAAWE,EAAKC,KAAM,cAAY,UAEvC,uBAAKH,UAAWnB,EAAQI,eACtB,sBAAId,MAAO,CAAEF,UAAW,WAAaiC,EAAKE,QAC1C,yBAAIF,EAAKrC,WACT,0BACGqC,EAAK3B,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACf,sBAAIC,IAAKD,GAAID,OAGhByB,EAAKG,MAAQH,EAAKI,UAAYJ,EAAKK,eAClC,yBACE,wBACEC,QAAS,kBAAMZ,EAAMM,EAAKG,OAC1BL,UAAU,YACVS,KAAK,OACLC,SAAU,EACVC,UAAW,SAAAC,GACM,UAAXA,EAAEC,MAAkBjB,EAAMM,EAAKG,QAGpCH,EAAKI,UAVV,IAYOJ,EAAKK,iBAKlB,gBAAC,EAAAO,EAAD,CACEC,MAAOlB,EAAamB,OAAOtC,GAAGuC,IAAIC,gBAAgBC,gBAClDC,IAAKvB,EAAamB,OAAOtC,GAAG0C,aAS1CzB,EAAU0B,OAASA,EAAAA,EACnB","sources":["webpack://dor-studio-architecture/./src/components/subheader.js","webpack://dor-studio-architecture/./src/pages/services.js"],"sourcesContent":["import React from \"react\"\nimport { styled } from '@mui/material/styles';\n\nconst Root = styled('div')((\n  {\n    theme\n  }\n) => ({\n    width: \"100%\",\n    background: theme.palette.subheader.main,\n    padding: \"2.5rem 1.875rem\",\n    color: \"white\",\n    textAlign: \"center\",\n    minHeight: '9.375rem',\n    \"@media(max-width: 47.9375rem)\": {\n      padding: \"2.5rem 0.9375rem\",\n    }\n}));\n\nconst Subheader = ({ subheader }) => {\n\n  return (\n    <Root>\n      <h4 style={{ marginBottom: 0 }}>{subheader.title}</h4>\n      <p>\n        <span style={{ textTransform: \"none\" }}>\n          {subheader.points.map((point, i) => (\n            <React.Fragment key={i}>\n              {point}\n              <br />\n            </React.Fragment>\n          ))}\n        </span>\n      </p>\n    </Root>\n  );\n}\n\nexport default Subheader\n","import React from \"react\"\nimport { styled } from '@mui/material/styles';\nimport Layout from \"../components/layout/layout\"\nimport Seo from \"../components/seo\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Subheader from \"../components/subheader\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst PREFIX = 'Services';\n\nconst classes = {\n  grid: `${PREFIX}-grid`,\n  gridItem: `${PREFIX}-gridItem`,\n  iconContainer: `${PREFIX}-iconContainer`,\n  textContanier: `${PREFIX}-textContanier`\n};\n\nconst Root = styled('div')((\n  {\n    theme\n  }\n) => ({\n  [`& .${classes.grid}`]: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    gridAutoFlow: \"column\",\n    gridTemplateRows: \"repeat(2, auto)\",\n    gap: \"1.875rem\",\n    width: \"100%\",\n    textTransform: \"none\",\n    marginBottom: \"2.1875rem\",\n    \"@media(max-width: 47.9375rem)\": {\n      gridTemplateColumns: \"none\",\n      gridTemplateRows: \"none\",\n      gridAutoFlow: \"unset\",\n    },\n  },\n\n  [`& .${classes.gridItem}`]: {\n    padding: \"1.875rem\",\n    backgroundColor: theme.palette.gridItem,\n  },\n\n  [`& .${classes.iconContainer}`]: {\n    width: \"100%\",\n    textAlign: \"center\",\n    color: theme.palette.primary.main,\n    fontSize: \"2.5em\",\n    padding: \"0 0.625rem\",\n    lineHeight: \"3.125rem\",\n  },\n\n  [`& .${classes.textContanier}`]: {\n    width: \"100%\",\n    padding: \"0 0.625rem\",\n  }\n}));\n\nconst IndexPage = ({ route }) => {\n\n  const data = useStaticQuery(graphql`\n    {\n      servicesJson {\n        subheader {\n          title\n          points\n        }\n        info {\n          icon\n          header\n          subheader\n          points\n          linkText\n          link\n          remainingText\n        }\n        images {\n          alt\n          src {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED)\n            }\n          }\n        }\n      }\n    }\n  `)\n  const servicesData = data.servicesJson\n\n  return (\n    <Root>\n      <Seo title=\"Services\" />\n      <Subheader subheader={servicesData.subheader} />\n      <div className={classes.grid}>\n        {servicesData.info.map((item, i) => (\n          <React.Fragment key={i}>\n            <div className={classes.gridItem}>\n              <div className={classes.iconContainer}>\n                <i className={item.icon} aria-hidden=\"true\" />\n              </div>\n              <div className={classes.textContanier}>\n                <h5 style={{ textAlign: \"center\" }}>{item.header}</h5>\n                <p>{item.subheader}</p>\n                <ul>\n                  {item.points.map((point, i) => (\n                    <li key={i}>{point}</li>\n                  ))}\n                </ul>\n                {item.link && item.linkText && item.remainingText && (\n                  <p>\n                    <span\n                      onClick={() => route(item.link)}\n                      className=\"span-link\"\n                      role=\"link\"\n                      tabIndex={0}\n                      onKeyDown={e => {\n                        if (e.code === \"Enter\") route(item.link)\n                      }}\n                    >\n                      {item.linkText}\n                    </span>\n                    {` ${item.remainingText}`}\n                  </p>\n                )}\n              </div>\n            </div>\n            <GatsbyImage\n              image={servicesData.images[i].src.childImageSharp.gatsbyImageData}\n              alt={servicesData.images[i].alt}\n            />\n          </React.Fragment>\n        ))}\n      </div>\n    </Root>\n  );\n}\n\nIndexPage.Layout = Layout\nexport default IndexPage\n"],"names":["Root","styled","width","background","theme","palette","subheader","main","padding","color","textAlign","minHeight","style","marginBottom","title","textTransform","points","map","point","i","key","PREFIX","classes","grid","gridItem","iconContainer","textContanier","display","gridTemplateColumns","gridAutoFlow","gridTemplateRows","gap","backgroundColor","primary","fontSize","lineHeight","IndexPage","route","servicesData","useStaticQuery","servicesJson","className","info","item","icon","header","link","linkText","remainingText","onClick","role","tabIndex","onKeyDown","e","code","G","image","images","src","childImageSharp","gatsbyImageData","alt","Layout"],"sourceRoot":""}